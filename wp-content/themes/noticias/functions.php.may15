<?php 
if ( function_exists ('register_sidebar'))
register_sidebar( array(
	'name'          => __('Products'),
	'id'            => 'sidebar-productos',
	'description'   => 'Sidebar for showing ad and section list on the template single-book.php',
	'before_widget' => '<div id="%1$s" class="widget %2$s">',
	'after_widget'  => '</div>',
	'before_title'  => '<h2 class="widgettitle">',
	'after_title'   => '</h2>' ));

// Display featured image if toggle is on.
if( !function_exists( 'responsive_pro_featured_image' ) ) {
        function responsive_pro_featured_image() {

                // Get value of post byline tags toggle option from theme option for different pages
                if( is_single() ) {
                        $show_image = responsive_pro_get_option( 'single_featured_images' );
                }
                elseif( is_archive() ) {
                        $show_image = responsive_pro_get_option( 'archive_featured_images' );
                }
                else {
                        $show_image = responsive_pro_get_option( 'blog_featured_images' );
                }

                if( $show_image && has_post_thumbnail() ) {
                        ?>
                        <div class="featured-image">
                                <a href="<?php the_permalink(); ?>" title="<?php printf( esc_attr__( 'Permalink to %s', 'responsive' ), the_title_attribute( 'echo=0' ) ); ?>" rel="bookmark">
                                        <?php the_post_thumbnail( 'large', array( 'class' => 'alignleft' ) ); ?>
                                </a>
                        </div>
                <?php
                }
        }
}

function wpbeginner_numeric_posts_nav() {

	if( is_singular() )
		return;

	global $wp_query;

	/** Stop execution if there's only 1 page */
	if( $wp_query->max_num_pages <= 1 )
		return;

	$paged = get_query_var( 'paged' ) ? absint( get_query_var( 'paged' ) ) : 1;
	$max   = intval( $wp_query->max_num_pages );

	/**	Add current page to the array */
	if ( $paged >= 1 )
		$links[] = $paged;

	/**	Add the pages around the current page to the array */
	if ( $paged >= 3 ) {
		$links[] = $paged - 1;
		$links[] = $paged - 2;
	}

	if ( ( $paged + 2 ) <= $max ) {
		$links[] = $paged + 2;
		$links[] = $paged + 1;
	}

	echo '<div class="navigation"><ul>' . "\n";

	/**	Previous Post Link */
	if ( get_previous_posts_link() )
		printf( '<li>%s</li>' . "\n", get_previous_posts_link() );

	/**	Link to first page, plus ellipses if necessary */
	if ( ! in_array( 1, $links ) ) {
		$class = 1 == $paged ? ' class="active"' : '';

		printf( '<li%s><a href="%s">%s</a></li>' . "\n", $class, esc_url( get_pagenum_link( 1 ) ), '1' );

		if ( ! in_array( 2, $links ) )
			echo '<li>…</li>';
	}

	/**	Link to current page, plus 2 pages in either direction if necessary */
	sort( $links );
	foreach ( (array) $links as $link ) {
		$class = $paged == $link ? ' class="active"' : '';
		printf( '<li%s><a href="%s">%s</a></li>' . "\n", $class, esc_url( get_pagenum_link( $link ) ), $link );
	}

	/**	Link to last page, plus ellipses if necessary */
	if ( ! in_array( $max, $links ) ) {
		if ( ! in_array( $max - 1, $links ) )
			echo '<li>…</li>' . "\n";

		$class = $paged == $max ? ' class="active"' : '';
		printf( '<li%s><a href="%s">%s</a></li>' . "\n", $class, esc_url( get_pagenum_link( $max ) ), $max );
	}

	/**	Next Post Link */
	if ( get_next_posts_link() )
		printf( '<li>%s</li>' . "\n", get_next_posts_link() );

	echo '</ul></div>' . "\n";

}


function news_widgets_init() {
    register_sidebar( array(
                          'name'          => __( 'Top Bar Widget', 'responsive' ),
                          'description'   => __( 'Area 13 - top bar', 'responsive' ),
                          'id'            => 'top-bar-widget',
                          'class'            => 'top-bar-widget-container',
                          'before_title'  => '',
                          'after_title'   => '',
                          'before_widget' => '<div id="%1$s" class="top-bar-widget %2$s"><div class="widget-wrapper">',
                          'after_widget'  => '</div></div>'
                      ) );
}

function news_get_social_icons() {

	$responsive_options = responsive_get_options();

	$sites = array (
		'twitter'     => __( 'Twitter', 'responsive' ),
		'facebook'    => __( 'Facebook', 'responsive' ),
		'linkedin'    => __( 'LinkedIn', 'responsive' ),
		'youtube'     => __( 'YouTube', 'responsive' ),
		'stumbleupon' => __( 'StumbleUpon', 'responsive' ),
		'rss'         => __( 'RSS Feed', 'responsive' ),
		'googleplus'  => __( 'Google+', 'responsive' ),
		'instagram'   => __( 'Instagram', 'responsive' ),
		'pinterest'   => __( 'Pinterest', 'responsive' ),
		'yelp'        => __( 'Yelp!', 'responsive' ),
		'vimeo'       => __( 'Vimeo', 'responsive' ),
		'foursquare'  => __( 'foursquare', 'responsive' ),
	);

	$html = '<ul class="social-icons">';
	foreach( $sites as $key => $value ) {
		if ( !empty( $responsive_options[$key . '_uid'] ) ) {
			$html .= '<li class="' . esc_attr( $key ) . '-icon"><a href="' . $responsive_options[$key . '_uid'] . '">' . '<img src="' . responsive_child_uri( '/core/icons/' . esc_attr( $key ) . '-icon.png' ) . '" alt="' . esc_html( $value ) . '">' . '</a></li>';
		}
	}
	$html .= '</ul><!-- .social-icons -->';

	return $html;

}

add_filter( 'wp_get_attachment_link', 'sant_prettyadd');
 
function sant_prettyadd ($content) {
	$content = preg_replace("/<a/","<a rel=\"prettyPhoto[slides]\"",$content,1);
	return $content;
}

function news_theme_setup () {
            add_action( 'wp_enqueue_scripts', 'news_get_social_icons', 1000 );
}
add_action( 'after_setup_theme', 'news_theme_setup' );

add_action( 'widgets_init', 'news_widgets_init' );

add_image_size( 'center-top-300x300', 300, 300, array( 'center', 'top' ) );
add_image_size( 'center-top-300x300', 240, 160, array( 'center', 'top' ) );
add_image_size( 'center-top-100x100', 100, 100, array( 'center', 'top' ) );
//add_image_size('Video-Poster-640x360', 640, 360, true);
add_image_size('Video-Poster-640x360', 640, 360, array( 'center', 'top' ) );
add_image_size('lptv-carousel-100x60', 100, 60, array( 'center', 'top' ) );
add_image_size('lptv-slider-300x172', 300, 172, array( 'center', 'top' ) );
add_image_size('caricatura-home', 260, 190, true);

?>
